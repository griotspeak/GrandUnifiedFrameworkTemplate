<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
  <dict>
    <key>Ancestors</key>
    <array>
      <string>com.apple.dt.unit.base</string>
      <string>com.apple.dt.unit.iOSReferenceCounting</string>
      <string>com.apple.dt.unit.macReferenceCounting</string>
    </array>
    <key>Platforms</key>
    <array>
      <string>com.apple.platform.iphoneos</string>
      <string>com.apple.platform.macosx</string>
    </array>
    <key>Concrete</key>
    <true/>
    <key>Definitions</key>
    <dict>
      <key>___PACKAGENAMEASIDENTIFIER___.h</key>
      <dict>
        <key>Path</key>
        <string>___PACKAGENAMEASIDENTIFIER___.h</string>
        <key>TargetIndices</key>
        <array>
          <integer>0</integer>
          <integer>3</integer>
        </array>
      </dict>
    </dict>
    <key>Description</key>
    <string>This template builds a static library that links against the Foundation framework.</string>
    <key>Identifier</key>
    <string>com.buttonsAndLights.cocoaTouchStaticLibrary</string>
    <key>Kind</key>
    <string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
    <key>Project</key>
    <dict>
      <key>SharedSettings</key>
      <dict>
      </dict>
    </dict>
    <key>Nodes</key>
    <array>
      <string>___PACKAGENAME___-Prefix.pch:objC:importFoundation</string>
      <string>___PACKAGENAMEASIDENTIFIER___.h</string>
    </array>
    <key>Options</key>
    <array>
      <dict>
        <key>Default</key>
        <string>true</string>
        <key>Description</key>
        <string>Whether a unit test bundle should be created</string>
        <key>Identifier</key>
        <string>includeUnitTests</string>
        <key>Name</key>
        <string>Include Unit Tests</string>
        <key>SortOrder</key>
        <integer>1</integer>
        <key>Type</key>
        <string>checkbox</string>
        <key>Units</key>
        <dict>
          <key>true</key>
          <array>
            <dict>
              <key>Components</key>
              <array>
                <dict>
                  <key>Identifier</key>
                  <string>com.apple.dt.unit.cocoaTouchFrameworkUnitTestBundle</string>
                  <key>Name</key>
                  <string>___PACKAGENAME____Tests</string>
                </dict>
              </array>
            </dict>
          </array>
        </dict>
      </dict>
    </array>
    <key>Targets</key>
    <array>
      <dict>
        <key>Name</key>
        <string>lib___PACKAGENAME____iOS</string>
        <key>ProductType</key>
        <string>com.apple.product-type.library.static</string>
        <key>Ancestors</key>
        <array>
          <string>com.apple.dt.unit.base</string>
          <string>com.apple.dt.unit.iPhoneBase</string>
        </array>
        <key>SharedSettings</key>
        <dict>
          <key>DSTROOT</key>
          <string>/tmp/___PACKAGENAMEASIDENTIFIER___.dst</string>
          <key>GCC_PRECOMPILE_PREFIX_HEADER</key>
          <string>YES</string>
          <key>GCC_PREFIX_HEADER</key>
          <string>___PACKAGENAME___/___PACKAGENAME___-Prefix.pch</string>
          <key>OTHER_LDFLAGS</key>
          <string>-ObjC</string>
          <key>SKIP_INSTALL</key>
          <string>YES</string>
          <key>DEAD_CODE_STRIPPING</key>
          <string>NO</string>
          <key>COPY_PHASE_STRIP</key>
          <string>NO</string>
          <key>STRIP_STYLE</key>
          <string>non-global</string>
          <key>PUBLIC_HEADERS_FOLDER_PATH</key>
          <string>include/$(PRODUCT_NAME)</string>
          <key>SDKROOT</key>
          <string>iphoneos</string>
          <key>PRODUCT_NAME</key>
          <string>$(PROJECT_NAME)</string>
        </dict>
        <key>BuildPhases</key>
        <array>
          <dict>
            <key>Class</key>
            <string>Sources</string>
          </dict>
          <dict>
            <key>Class</key>
            <string>Frameworks</string>
          </dict>
          <dict>
            <key>Class</key>
            <string>CopyFiles</string>
            <key>DstPath</key>
            <string>include/${PRODUCT_NAME}</string>
            <key>DstSubfolderSpec</key>
            <integer>16</integer>
          </dict>
          <dict>
            <key>Class</key>
            <string>ShellScript</string>
            <key>ShellPath</key>
            <string>/bin/sh</string>
            <key>Name</key>
            <string>Create folder structure</string>
            <key>ShellScript</key>
            <string>
set -e

#Create folder structure
FW_PRODUCT_NAME="${PRODUCT_NAME}"

FW_HEADER_DIRECTORY="${BUILT_PRODUCTS_DIR}/${FW_PRODUCT_NAME}.framework/Versions/${FRAMEWORK_VERSION}/Headers"
FW_RESOURCE_DIRECTORY="${BUILT_PRODUCTS_DIR}/${FW_PRODUCT_NAME}.framework/Versions/${FRAMEWORK_VERSION}/Resources"

mkdir -p ${FW_HEADER_DIRECTORY}
mkdir -p ${FW_RESOURCE_DIRECTORY}

# Link the "Current" version to "${FRAMEWORK_VERSION}"
/bin/ln -sfh ${FRAMEWORK_VERSION} "${BUILT_PRODUCTS_DIR}/${FW_PRODUCT_NAME}.framework/Versions/Current"
/bin/ln -sfh Versions/Current/Headers "${BUILT_PRODUCTS_DIR}/${FW_PRODUCT_NAME}.framework/Headers"
/bin/ln -sfh Versions/Current/Resources "${BUILT_PRODUCTS_DIR}/${FW_PRODUCT_NAME}.framework/Resources"
/bin/ln -sfh "Versions/Current/${FW_PRODUCT_NAME}" "${BUILT_PRODUCTS_DIR}/${FW_PRODUCT_NAME}.framework/${FW_PRODUCT_NAME}"

# Copy resources
FW_RES_BUNDLE_PATH="${BUILT_PRODUCTS_DIR}/${FW_PRODUCT_NAME}_Resources.bundle"

if [ -d ${FW_RES_BUNDLE_PATH} ]; then
  cp -R "${FW_RES_BUNDLE_PATH}/" ${FW_RESOURCE_DIRECTORY}
fi

            </string>
          </dict>
        </array>
        <key>Frameworks</key>
        <array>
          <string>Foundation</string>
        </array>
        <key>Dependencies</key>
        <array>
          <integer>1</integer>
        </array>
      </dict>
      <dict>
        <key>Name</key>
        <string>___PACKAGENAMEASIDENTIFIER____Resources</string>
        <key>ProductType</key>
        <string>com.apple.product-type.bundle</string>
        <key>SharedSettings</key>
        <dict>
          <key>INSTALL_PATH</key>
          <string>$(LOCAL_LIBRARY_DIR)/Bundles</string>
          <key>WRAPPER_EXTENSION</key>
          <string>bundle</string>
          <key>COMBINE_HIDPI_IMAGES</key>
          <string>YES</string>
          <key>SUPPORTED_PLATFORMS</key>
          <string>iphonesimulator iphoneos macosx</string>
          <key>VALID_ARCHS</key>
          <string>i386 x86_64 arm7 arm7s</string>
          <key>ARCHS</key>
          <string>$(ARCHS_STANDARD_64_BIT)</string>
          <key>PRODUCT_NAME</key>
          <string>$(TARGET_NAME)</string>
        </dict>
        <key>Configurations</key>
        <!-- Target Configuration -->
        <dict>
          <key>Release</key>
          <dict/>
        </dict>
        <key>BuildPhases</key>
        <array>
          <dict>
            <key>Class</key>
            <string>Sources</string>
          </dict>
          <dict>
            <key>Class</key>
            <string>Frameworks</string>
          </dict>
          <dict>
            <key>Class</key>
            <string>Resources</string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>Name</key>
        <string>___PACKAGENAME____iOS</string>
        <key>Ancestors</key>
        <array>
          <string>com.apple.dt.unit.base</string>
          <string>com.apple.dt.unit.aggregate</string>
        </array>
        <key>ProductType</key>
        <string>com.apple.product-type.bundle</string>
        <key>Dependencies</key>
        <array>
          <integer>0</integer>
          <integer>1</integer>
        </array>
        <key>SharedSettings</key>
        <dict>
          <key>PRODUCT_NAME</key>
          <string>$(PROJECT_NAME)_iOS</string>
          <key>WRAPPER_EXTENSION</key>
          <string>framework</string>
          <key>SDKROOT</key>
          <string>iphoneos</string>
          <key>MACH_O_TYPE</key>
          <string>mh_object</string>
        </dict>
        <key>BuildPhases</key>
        <array>
          <dict>
            <key>Class</key>
            <string>ShellScript</string>
            <key>ShellPath</key>
            <string>/bin/sh</string>
            <key>Name</key>
            <string>Create folder structure</string>
            <key>ShellScript</key>
            <string>
set -e
set +u
# Avoid recursively calling this script.
if [[ $FW_MASTER_SCRIPT_RUNNING ]]
then
    exit 0
fi
set -u
export FW_MASTER_SCRIPT_RUNNING=1

FW_TARGET_NAME=${PRODUCT_NAME}
FW_EXECUTABLE_PATH="lib${FW_TARGET_NAME}.a"
FW_WRAPPER_NAME="${FW_TARGET_NAME}.framework"
FW_SDK_PLATFORM=${EFFECTIVE_PLATFORM_NAME:1}
FW_SDK_VERSION=${IPHONEOS_DEPLOYMENT_TARGET}

if [[ "${FW_SDK_PLATFORM}" = "iphoneos" ]]
then
    FW_OTHER_PLATFORM=iphonesimulator
else
    FW_OTHER_PLATFORM=iphoneos
fi

# replace iphoneos "platform" with "other platform" in BUILT_PRODUCTS_DIR
# substring replacement ${string/substring/replacement}
FW_OTHER_BUILT_PRODUCTS_DIR=${BUILT_PRODUCTS_DIR/$FW_SDK_PLATFORM/$FW_OTHER_PLATFORM}

echo "FW_TARGET_NAME = ${FW_TARGET_NAME}"
echo "FW_EXECUTABLE_PATH = ${FW_EXECUTABLE_PATH}"
echo "FW_WRAPPER_NAME = ${FW_WRAPPER_NAME}"
echo "FW_SDK_PLATFORM = ${FW_SDK_PLATFORM}"
echo "FW_OTHER_PLATFORM = ${FW_OTHER_PLATFORM}"
echo "FW_SDK_VERSION = ${FW_SDK_VERSION}"
echo "BUILT_PRODUCTS_DIR = ${BUILT_PRODUCTS_DIR}"
echo "FW_OTHER_BUILT_PRODUCTS_DIR = ${FW_OTHER_BUILT_PRODUCTS_DIR}"

# Build the other platform.
xcodebuild -project "${PROJECT_FILE_PATH}" -target "${TARGET_NAME}" -configuration "${CONFIGURATION}" -sdk ${FW_OTHER_PLATFORM}${FW_SDK_VERSION} BUILD_DIR="${BUILD_DIR}" OBJROOT="${OBJROOT}" BUILD_ROOT="${BUILD_ROOT}" SYMROOT="${SYMROOT}" $ACTION

# Smash the two static libraries into one fat binary and store it in the .framework
lipo -create "${BUILT_PRODUCTS_DIR}/${FW_EXECUTABLE_PATH}" "${FW_OTHER_BUILT_PRODUCTS_DIR}/${FW_EXECUTABLE_PATH}" -output "${BUILT_PRODUCTS_DIR}/${FW_WRAPPER_NAME}/Versions/A/${FW_TARGET_NAME}"

# Copy the binary to the other architecture folder to have a complete framework in both.
cp -a "${BUILT_PRODUCTS_DIR}/${FW_WRAPPER_NAME}/Versions/A/${FW_TARGET_NAME}" "${FW_OTHER_BUILT_PRODUCTS_DIR}/${FW_WRAPPER_NAME}/Versions/A/${FW_TARGET_NAME}"
            </string>
          </dict>
        </array>
      </dict>
      <dict>
        <key>Name</key>
        <string>___PACKAGENAME____Mac</string>
        <key>ProductType</key>
        <string>com.apple.product-type.framework</string>
        <key>Ancestors</key>
        <array>
          <string>com.apple.dt.unit.bundleBase</string>
          <string>com.apple.dt.unit.macBase</string>
          <string>com.apple.dt.unit.macReferenceCounting</string>
        </array>
        <key>SharedSettings</key>
        <dict>
          <key>SDKROOT</key>
          <string>macosx</string>
          <key>WRAPPER_EXTENSION</key>
          <string>framework</string>
          <key>FRAMEWORK_VERSION</key>
          <string>A</string>
          <key>DYLIB_COMPATIBILITY_VERSION</key>
          <string>1</string>
          <key>DYLIB_CURRENT_VERSION</key>
          <string>1</string>
          <key>PRODUCT_NAME</key>
          <string>$(PROJECT_NAME)_Mac</string>
          <key>ARCHS</key>
          <string>$(ARCHS_STANDARD_64_BIT)</string>
          <key>DSTROOT</key>
          <string>/tmp/___PACKAGENAMEASIDENTIFIER___.dst</string>
          <key>GCC_PRECOMPILE_PREFIX_HEADER</key>
          <string>YES</string>
          <key>GCC_PREFIX_HEADER</key>
          <string>___PACKAGENAME___/___PACKAGENAME___-Prefix.pch</string>
          <key>OTHER_LDFLAGS</key>
          <string>-ObjC</string>
          <key>SKIP_INSTALL</key>
          <string>YES</string>
          <key>DEAD_CODE_STRIPPING</key>
          <string>NO</string>
          <key>COPY_PHASE_STRIP</key>
          <string>NO</string>
          <key>STRIP_STYLE</key>
          <string>non-global</string>
          <key>PUBLIC_HEADERS_FOLDER_PATH</key>
          <string>include/$(PRODUCT_NAME)</string>
        </dict>
        <key>Dependencies</key>
        <array>
        </array>
        <key>BuildPhases</key>
        <array>
          <dict>
            <key>Class</key>
            <string>Sources</string>
          </dict>
          <dict>
            <key>Class</key>
            <string>Frameworks</string>
          </dict>
          <dict>
            <key>Class</key>
            <string>Headers</string>
          </dict>
          <dict>
            <key>Class</key>
            <string>Resources</string>
          </dict>
        </array>
      </dict>
    </array>
  </dict>
</plist>